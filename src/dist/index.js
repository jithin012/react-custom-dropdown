/* eslint-disable */
!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?module.exports=t():"function"==typeof define&&define.amd?define(t):(e=e||self).bundle=t()}(this,function(){"use strict";function e(e,t){return e(t={exports:{}},t.exports),t.exports}var c=Object.getOwnPropertySymbols,u=Object.prototype.hasOwnProperty,a=Object.prototype.propertyIsEnumerable;var p=function(){try{if(!Object.assign)return!1;var e=new String("abc");if(e[5]="de","5"===Object.getOwnPropertyNames(e)[0])return!1;for(var t={},n=0;n<10;n++)t["_"+String.fromCharCode(n)]=n;if("0123456789"!==Object.getOwnPropertyNames(t).map(function(e){return t[e]}).join(""))return!1;var o={};return"abcdefghijklmnopqrst".split("").forEach(function(e){o[e]=e}),"abcdefghijklmnopqrst"===Object.keys(Object.assign({},o)).join("")}catch(e){return!1}}()?Object.assign:function(e,t){for(var n,o,i=function(e){if(null==e)throw new TypeError("Object.assign cannot be called with null or undefined");return Object(e)}(e),l=1;l<arguments.length;l++){for(var r in n=Object(arguments[l]))u.call(n,r)&&(i[r]=n[r]);if(c){o=c(n);for(var s=0;s<o.length;s++)a.call(n,o[s])&&(i[o[s]]=n[o[s]])}}return i},d="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},t=function(){function o(e,t){for(var n=0;n<t.length;n++){var o=t[n];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(e,o.key,o)}}return function(e,t,n){return t&&o(e.prototype,t),n&&o(e,n),e}}(),f=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var o in n)Object.prototype.hasOwnProperty.call(n,o)&&(e[o]=n[o])}return e},s=function(e){if(Array.isArray(e)){for(var t=0,n=Array(e.length);t<e.length;t++)n[t]=e[t];return n}return Array.from(e)},n="function"==typeof Symbol&&Symbol.for,h=n?Symbol.for("react.element"):60103,m=n?Symbol.for("react.portal"):60106,o=n?Symbol.for("react.fragment"):60107,i=n?Symbol.for("react.strict_mode"):60108,l=n?Symbol.for("react.profiler"):60114,r=n?Symbol.for("react.provider"):60109,g=n?Symbol.for("react.context"):60110,y=n?Symbol.for("react.concurrent_mode"):60111,b=n?Symbol.for("react.forward_ref"):60112,v=n?Symbol.for("react.suspense"):60113,O=n?Symbol.for("react.memo"):60115,S=n?Symbol.for("react.lazy"):60116,k="function"==typeof Symbol&&Symbol.iterator;function C(e){for(var t=arguments.length-1,n="https://reactjs.org/docs/error-decoder.html?invariant="+e,o=0;o<t;o++)n+="&args[]="+encodeURIComponent(arguments[o+1]);!function(e,t,n,o,i,l,r,s){if(!e){if((e=void 0)===t)e=Error("Minified exception occurred; use the non-minified dev environment for the full error message and additional helpful warnings.");else{var c=[n,o,i,l,r,s],u=0;(e=Error(t.replace(/%s/g,function(){return c[u++]}))).name="Invariant Violation"}throw e.framesToPop=1,e}}(!1,"Minified React error #"+e+"; visit %s for the full message or use the non-minified dev environment for full errors and additional helpful warnings. ",n)}var w={isMounted:function(){return!1},enqueueForceUpdate:function(){},enqueueReplaceState:function(){},enqueueSetState:function(){}},M={};function E(e,t,n){this.props=e,this.context=t,this.refs=M,this.updater=n||w}function j(){}function A(e,t,n){this.props=e,this.context=t,this.refs=M,this.updater=n||w}E.prototype.isReactComponent={},E.prototype.setState=function(e,t){"object"!==(void 0===e?"undefined":d(e))&&"function"!=typeof e&&null!=e&&C("85"),this.updater.enqueueSetState(this,e,t,"setState")},E.prototype.forceUpdate=function(e){this.updater.enqueueForceUpdate(this,e,"forceUpdate")},j.prototype=E.prototype;var L=A.prototype=new j;L.constructor=A,p(L,E.prototype),L.isPureReactComponent=!0;var T={current:null},x={current:null},D=Object.prototype.hasOwnProperty,H={key:!0,ref:!0,__self:!0,__source:!0};function R(e,t,n){var o=void 0,i={},l=null,r=null;if(null!=t)for(o in void 0!==t.ref&&(r=t.ref),void 0!==t.key&&(l=""+t.key),t)D.call(t,o)&&!H.hasOwnProperty(o)&&(i[o]=t[o]);var s=arguments.length-2;if(1===s)i.children=n;else if(1<s){for(var c=Array(s),u=0;u<s;u++)c[u]=arguments[u+2];i.children=c}if(e&&e.defaultProps)for(o in s=e.defaultProps)void 0===i[o]&&(i[o]=s[o]);return{$$typeof:h,type:e,key:l,ref:r,props:i,_owner:x.current}}function _(e){return"object"===(void 0===e?"undefined":d(e))&&null!==e&&e.$$typeof===h}var P=/\/+/g,W=[];function F(e,t,n,o){if(W.length){var i=W.pop();return i.result=e,i.keyPrefix=t,i.func=n,i.context=o,i.count=0,i}return{result:e,keyPrefix:t,func:n,context:o,count:0}}function N(e){e.result=null,e.keyPrefix=null,e.func=null,e.context=null,e.count=0,W.length<10&&W.push(e)}function B(e,t,n){return null==e?0:function e(t,n,o,i){var l=void 0===t?"undefined":d(t);"undefined"!==l&&"boolean"!==l||(t=null);var r=!1;if(null===t)r=!0;else switch(l){case"string":case"number":r=!0;break;case"object":switch(t.$$typeof){case h:case m:r=!0}}if(r)return o(i,t,""===n?"."+U(t,0):n),1;if(r=0,n=""===n?".":n+":",Array.isArray(t))for(var s=0;s<t.length;s++){var c=n+U(l=t[s],s);r+=e(l,c,o,i)}else if("function"==typeof(c=null===t||"object"!==(void 0===t?"undefined":d(t))?null:"function"==typeof(c=k&&t[k]||t["@@iterator"])?c:null))for(t=c.call(t),s=0;!(l=t.next()).done;)r+=e(l=l.value,c=n+U(l,s++),o,i);else"object"===l&&C("31","[object Object]"==(o=""+t)?"object with keys {"+Object.keys(t).join(", ")+"}":o,"");return r}(e,"",t,n)}function U(e,t){return"object"===(void 0===e?"undefined":d(e))&&null!==e&&null!=e.key?(n=e.key,o={"=":"=0",":":"=2"},"$"+(""+n).replace(/[=:]/g,function(e){return o[e]})):t.toString(36);var n,o}function $(e,t){e.func.call(e.context,t,e.count++)}function I(e,t,n){var o,i,l=e.result,r=e.keyPrefix;e=e.func.call(e.context,t,e.count++),Array.isArray(e)?V(e,l,n,function(e){return e}):null!=e&&(_(e)&&(i=r+(!(o=e).key||t&&t.key===e.key?"":(""+e.key).replace(P,"$&/")+"/")+n,e={$$typeof:h,type:o.type,key:i,ref:o.ref,props:o.props,_owner:o._owner}),l.push(e))}function V(e,t,n,o,i){var l="";null!=n&&(l=(""+n).replace(P,"$&/")+"/"),B(e,I,t=F(t,l,o,i)),N(t)}function q(){var e=T.current;return null===e&&C("307"),e}var z={Children:{map:function(e,t,n){if(null==e)return e;var o=[];return V(e,o,null,t,n),o},forEach:function(e,t,n){if(null==e)return e;B(e,$,t=F(null,null,t,n)),N(t)},count:function(e){return B(e,function(){return null},null)},toArray:function(e){var t=[];return V(e,t,null,function(e){return e}),t},only:function(e){return _(e)||C("143"),e}},createRef:function(){return{current:null}},Component:E,PureComponent:A,createContext:function(e,t){return void 0===t&&(t=null),(e={$$typeof:g,_calculateChangedBits:t,_currentValue:e,_currentValue2:e,_threadCount:0,Provider:null,Consumer:null}).Provider={$$typeof:r,_context:e},e.Consumer=e},forwardRef:function(e){return{$$typeof:b,render:e}},lazy:function(e){return{$$typeof:S,_ctor:e,_status:-1,_result:null}},memo:function(e,t){return{$$typeof:O,type:e,compare:void 0===t?null:t}},useCallback:function(e,t){return q().useCallback(e,t)},useContext:function(e,t){return q().useContext(e,t)},useEffect:function(e,t){return q().useEffect(e,t)},useImperativeHandle:function(e,t,n){return q().useImperativeHandle(e,t,n)},useDebugValue:function(){},useLayoutEffect:function(e,t){return q().useLayoutEffect(e,t)},useMemo:function(e,t){return q().useMemo(e,t)},useReducer:function(e,t,n){return q().useReducer(e,t,n)},useRef:function(e){return q().useRef(e)},useState:function(e){return q().useState(e)},Fragment:o,StrictMode:i,Suspense:v,createElement:R,cloneElement:function(e,t,n){null==e&&C("267",e);var o=void 0,i=p({},e.props),l=e.key,r=e.ref,s=e._owner;if(null!=t){void 0!==t.ref&&(r=t.ref,s=x.current),void 0!==t.key&&(l=""+t.key);var c=void 0;for(o in e.type&&e.type.defaultProps&&(c=e.type.defaultProps),t)D.call(t,o)&&!H.hasOwnProperty(o)&&(i[o]=void 0===t[o]&&void 0!==c?c[o]:t[o])}if(1===(o=arguments.length-2))i.children=n;else if(1<o){c=Array(o);for(var u=0;u<o;u++)c[u]=arguments[u+2];i.children=c}return{$$typeof:h,type:e.type,key:l,ref:r,props:i,_owner:s}},createFactory:function(e){var t=R.bind(null,e);return t.type=e,t},isValidElement:_,version:"16.8.2",unstable_ConcurrentMode:y,unstable_Profiler:l,__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED:{ReactCurrentDispatcher:T,ReactCurrentOwner:x,assign:p}},G=z.default||z,Y=(e(function(e){}),e(function(e){e.exports=G})),J=(Y.Children,Y.Component),K=(Y.PropTypes,Y.createElement,Y.PureComponent,Y.Fragment);function Q(){}var X=e(function(e){e.exports=function(){function e(e,t,n,o,i,l){if("SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED"!==l){var r=new Error("Calling PropTypes validators directly is not supported by the `prop-types` package. Use PropTypes.checkPropTypes() to call them. Read more at http://fb.me/use-check-prop-types");throw r.name="Invariant Violation",r}}function t(){return e}var n={array:e.isRequired=e,bool:e,func:e,number:e,object:e,string:e,symbol:e,any:e,arrayOf:t,element:e,instanceOf:t,node:e,objectOf:t,oneOf:t,oneOfType:t,shape:t,exact:t};return n.checkPropTypes=Q,n.PropTypes=n}()});function Z(e){return Y.createElement("div",{className:"tick align-items-center "+e.class+" "+("function"==typeof e.onClick?"clickable":"not-clickable"),onClick:function(){e.onClick&&e.onClick()}},Y.createElement("svg",{width:e.width,height:e.height,viewBox:"0 0 9 4",version:"1.1",xmlns:"http://www.w3.org/2000/svg"},Y.createElement("g",{id:"Symbols",stroke:e.fill,strokeWidth:"1",fill:e.fill,strokeLinejoin:"round"},Y.createElement("g",{id:"Header",transform:"translate(-1120.000000, -19.000000)",stroke:e.fill,strokeWidth:"0.5"},Y.createElement("g",{id:"right"},Y.createElement("g",{transform:"translate(1041.000000, 9.000000)"},Y.createElement("polyline",{id:"Shape-Copy-2",points:"87 10 83.5 14 80 10"})))))))}function ee(t){return Y.createElement("div",{className:"cross "+("function"==typeof t.onClick?"clickable":"not-clickable"),onClick:function(){t.onClick&&t.onClick()},ref:function(e){t.refs&&t.refs(e)}},Y.createElement("svg",{xmlns:"http://www.w3.org/2000/svg",width:t.width,height:t.height,viewBox:"0 0 16 16"},Y.createElement("path",{fill:t.fill,fillRule:"nonzero",d:"M9.6 8l6.057-6.057a1.105 1.105 0 0 0 0-1.6 1.105 1.105 0 0 0-1.6 0L8 6.4 1.943.343a1.105 1.105 0 0 0-1.6 0 1.105 1.105 0 0 0 0 1.6L6.4 8 .343 14.057a1.105 1.105 0 0 0 0 1.6c.228.229.457.343.8.343s.571-.114.8-.343L8 9.6l6.057 6.057c.229.229.572.343.8.343.229 0 .572-.114.8-.343a1.105 1.105 0 0 0 0-1.6L9.6 8z"})))}Z.defaultProps={fill:"gray",width:12,height:12,onClick:null,class:null},Z.propTypes={fill:X.string,width:X.number,height:X.number,onClick:X.func,stroke:X.string,class:X.string},ee.defaultProps={fill:"#135142",width:16,height:16,onClick:null,ref:null},ee.propTypes={fill:X.string,width:X.number,height:X.number,onClick:X.func,ref:X.func};var te,ne={analyseInput:function(e,t){if(e&&ne.isArray(e)){var n={data:[],isMixWithTitle:!1};return 0===e.length?n.data.push(ne.getStructuredData("<No Options>","no_value",!0)):(ne.isSimpleArray(e)&&(n.data=ne.processSimpleArray(e)),ne.arrayContainsObject(e)&&(ne.containTitleField(e[0])&&ne.containDataField(e[0])?(n.isMixWithTitle=!0,n.data=ne.processTitleAndObjects(e)):n.data=ne.processObjects(e))),n}},containTitleField:function(e){return void 0!==e.title},containDataField:function(e){return void 0!==e.data},processSimpleArray:function(e){for(var t=e.length,n=[],o=0;o<t;o++)n.push(ne.getStructuredData(e[o],e[o]));return n},processTitleAndObjects:function(e){for(var t=e.length,n=[],o=null,i=!1,l="",r=0;r<t;r++)void 0!==(o=e[r]).title&&n.push(ne.getStructuredData(o.title,r,o.disabled,!1,[],!0)),void 0!==o.data&&(i=!0,l=o.title,n.push.apply(n,s(ne.processObjects(o.data,i,l))));return n},processObjects:function(e){for(var t=1<arguments.length&&void 0!==arguments[1]&&arguments[1],n=2<arguments.length&&void 0!==arguments[2]?arguments[2]:"",o=e.length,i=[],l={},r="",s=[],c=void 0,u=0;u<o;u++)s=[],r=(l=e[u]).label,c=l.value,ne.hasSubmenu(l)?(s.push({label:r,value:c,options:l.subMenu}),i.push(ne.getStructuredData(r,c,l.disabled,!0,s))):t?i.push(ne.getStructuredData(r,c,l.disabled,!1,[],!1,t,n,e)):i.push(ne.getStructuredData(r,c,l.disabled));return i},hasSubmenu:function(e){return void 0!==e.subMenu},getStructuredData:function(e,t){return{value:t,label:e,isDisabled:2<arguments.length&&void 0!==arguments[2]&&arguments[2],isSubmenu:3<arguments.length&&void 0!==arguments[3]&&arguments[3],subMenu:4<arguments.length&&void 0!==arguments[4]?arguments[4]:[],isTitle:5<arguments.length&&void 0!==arguments[5]&&arguments[5],hasGroup:6<arguments.length&&void 0!==arguments[6]&&arguments[6],groupName:7<arguments.length&&void 0!==arguments[7]?arguments[7]:"",groupEle:8<arguments.length&&void 0!==arguments[8]?arguments[8]:[]}},arrayContainsArray:function(e){return ne.isArray(e[0])},arrayContainsObject:function(e){return ne.isObject(e[0])},isSimpleArray:function(e){return"object"!==d(e[0])},isArray:function(e){return"object"===(void 0===e?"undefined":d(e))&&e.constructor===Array},isObject:function(e){return e&&"object"===(void 0===e?"undefined":d(e))&&e.constructor===Object}},oe=function(e){return!e||""===e},ie=function(e){return 0===Object.keys(e).length},le=(te=1e3,{getNew:function(){return++te}}),re="rcd-wrapper",se="rcd-header",ce="rcd-option-container",ue="rcd-each-option-wrapper",ae="rcd-option",pe="is-submenu",de="is-title",fe=function(e){return Y.createElement("div",null,he(e),e.mainMenuList,e.shouldUseMultiselectApplyBtn&&me(e))},he=function(e){return"function"==typeof e.optionHeaderer?e.optionHeaderer():e.shouldUseMultiselectOptionHeader?Y.createElement("div",{className:"rcd-option-header"},Y.createElement("div",{className:"rcd-option-header-label"},e.multiselectHeaderLabel),Y.createElement("div",{className:"rcd-option-header-clear-all",onClick:e.onClickClearAll},e.multiSelectHeaderClearAllLabel)):void 0},me=function(e){var t=e.multiselectApplyBtnClass?"rcd-apply-btn "+e.multiselectApplyBtnClass:"rcd-apply-btn";return Y.createElement("div",{className:t,onClick:e.onMultiSelectDone},e.multiselectApplyBtnLabel?e.multiselectApplyBtnLabel:"APPLY")};function ge(e){return Y.createElement("div",{className:"tick align-items-center "+e.class+" "+("function"==typeof e.onClick?"clickable":"not-clickable"),onClick:function(){e.onClick&&e.onClick()}},Y.createElement("svg",{xmlns:"http://www.w3.org/2000/svg",width:e.width,height:e.height,viewBox:"0 0 13 12"},Y.createElement("path",{fill:e.stroke,fillRule:"nonzero",stroke:e.stroke,strokeWidth:"1.2",d:"M6.095 10.8L1.552 7.497a.836.836 0 0 1-.345-.785.857.857 0 0 1 .537-.679.92.92 0 0 1 .88.107l3.04 2.21 4.707-6.767a.9.9 0 0 1 .797-.381c.317.019.6.2.74.473a.821.821 0 0 1-.06.852L6.095 10.8z"})))}function ye(e){return Y.createElement("div",{className:"align-items-center "+e.class+" "+("function"==typeof e.onClick?"clickable":"not-clickable"),onClick:function(){e.onClick&&e.onClick()},style:{cursor:"pointer"}},Y.createElement("svg",{height:e.height,viewBox:"0 0 13 13",width:e.width,xmlns:"http://www.w3.org/2000/svg"},Y.createElement("g",{fill:e.fill,fillRule:"evenodd"},Y.createElement("g",{stroke:e.stroke,strokeWidth:".5"},Y.createElement("circle",{cx:"6.5",cy:"6.5",r:"6.25"}),Y.createElement("circle",{cx:"6.5",cy:"6.5",r:"3.25"})))))}function be(e){return Y.createElement("div",{className:"align-items-center "+e.class+" "+("function"==typeof e.onClick?"clickable":"not-clickable"),onClick:function(){e.onClick&&e.onClick()},style:{cursor:"pointer"}},Y.createElement("svg",{height:e.height,viewBox:"0 0 13 13",width:e.width,xmlns:"http://www.w3.org/2000/svg"},Y.createElement("g",{fill:e.fill,fillRule:"evenodd"},Y.createElement("g",{stroke:e.stroke,strokeWidth:".5"},Y.createElement("circle",{cx:"6.5",cy:"6.5",r:"6.25"}),Y.createElement("circle",{cx:"6.5",cy:"6.5",fill:e.stroke,r:"3.25"})))))}X.oneOf(["top","right","bottom","left"]),X.string,X.string,ge.defaultProps={width:12,height:12,onClick:null,stroke:"#135142",class:null},ge.propTypes={fill:X.string,width:X.number,height:X.number,onClick:X.func,stroke:X.string,class:X.string},ye.defaultProps={fill:"none",width:13,height:13,onClick:null,stroke:"#77878e",class:null},ye.propTypes={fill:X.string,width:X.number,height:X.number,onClick:X.func,stroke:X.string,class:X.string},be.defaultProps={fill:"none",width:13,height:13,onClick:null,stroke:"#50b7e8",class:null},be.propTypes={fill:X.string,width:X.number,height:X.number,onClick:X.func,stroke:X.string,class:X.string};var ve=function(t){var n=t.optionObj,e=t.classes,o=t.isMixWithTitle,i=t.index,l=t.isSelectedOption,r=t.isMultiSelect;if(n.isTitle)return Oe(e,n,i);var s="rcd-each-option-wrapper";return(r||t.tickRequiredForSingleSelect||t.shouldUseRadioBtn||o)&&(s+=" rcd-option-holder"),t.removeOptionWhenSelected&&t.isSelectedOption&&(s+=" no-display"),n.isDisabled&&(e+=" rcd-option-disable"),l&&(e+=" font-bold "+t.selectedOptionClass),Y.createElement("div",{className:s,onMouseOver:function(e){return t.onMouseOver(e,n)},onMouseOut:function(e){return t.onMouseOut(e,n)},key:""+i,onClick:function(e){n.isDisabled||t.onSelect(n,e)}},t.isMultiSelect&&ke(l,t.tick),!t.isMultiSelect&&t.tickRequiredForSingleSelect&&ke(l,t.tick),!t.isMultiSelect&&t.shouldUseRadioBtn&&Ce(l,n,t.radio),Y.createElement("div",{"data-key":n.value,key:n.value,className:t.defaultOptionClass+" "+e},Se(n.label,t.autoWidthAdjust)))},Oe=function(e,t,n){return Y.createElement("div",{key:""+n,className:e},t.label)},Se=function(e,t){return e},ke=function(e,t){return e?Y.createElement(ge,{width:t.width,height:t.height,stroke:t.color}):Y.createElement("div",{style:{marginLeft:t.width+"px"}})},Ce=function(e,t,n){return e?Y.createElement(be,{width:n.width,height:n.height,stroke:n.selectedFillColor}):Y.createElement(ye,{width:n.width,height:n.height,stroke:n.unSelectedFillColor})},we=function(e){function n(e){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,n);var t=function(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}(this,(n.__proto__||Object.getPrototypeOf(n)).call(this,e));return Me.call(t),t.state={selectedOption:"",selectedMultiSelectOptions:{},selectedMultiSelectLabel:"",width:0,isCompletedMultiSelection:!0,isOpen:!1},t.wrapperRef=Y.createRef(),t}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(n,J),t(n,[{key:"componentDidMount",value:function(){this.listenClickoutsideEvent(),this.setPreselectedValue(),this.props.autoOpen&&this.showOption()}},{key:"componentWillUnmount",value:function(){document.removeEventListener("click",this.handleClickoutside)}},{key:"componentWillReceiveProps",value:function(e){e.shouldResetState&&this.resetState()}},{key:"render",value:function(){var t=this,e=ne.analyseInput(this.props.option,this.props.selectedValues),n=this.makeListAsOption(e.data,e.isMixWithTitle),o=se;return o+=this.isMultiSelect()?" label-multi-table ":" label-single-center ",o+=this.props.headerClass?this.props.headerClass:"",Y.createElement("div",{ref:this.wrapperRef,className:re+" "+this.props.wrapperClass,onMouseEnter:this.props.shouldOpenOptionsOnhover?this.showOption:null,onMouseLeave:this.props.shouldOpenOptionsOnhover?this.hideOption:null},Y.createElement("div",{className:o,onClick:this.props.disabled?null:this.toggleDropdown,onMouseOver:function(e){t.onHeaderHover()},ref:function(e){t.headerRef=e}},this.renderHeader(),this.props.shouldUseArrow&&this.renderArrow()),this.state.isOpen&&"function"==typeof this.props.headerOptionDivider&&this.props.headerOptionDivider(),Y.createElement("div",{style:{visibility:this.state.isOpen?"visible":"hidden",transition:this.state.isOpen?"visibility 0ms linear 100ms":"visibility 0s linear 10ms"},className:ce+" "+this.props.optionContainerClass},n.mainMenuList))}}]),n}(),Me=function(){var s=this;this.longestOptionStrLength=-1,this.longestString="x",this.setPreselectedValue=function(e,t){var n=e||s.props;n.multiSelect?s.handlePreSelectedForMultiSelection(n,function(){return t&&t()}):n.selectedValues&&n.selectedValues.constructor===Object&&s.setState({selectedOption:n.selectedValues.label},function(){return t&&t()})},this.handlePreSelectedForMultiSelection=function(e,t){var n={},o={},i="";if(e.selectedValues&&0<e.selectedValues.length){for(var l=0;l<e.selectedValues.length;l++)n=e.selectedValues[l],ne.containTitleField(n)?(i+=n.label+", ",o[n.title]={},o[n.title][n.label]=ne.getStructuredData(n.label,n.value,n.disabled,!1,[],n.title,!0)):(i+=n.label+", ",o[n.label]=ne.getStructuredData(n.label,n.value,n.disabled));i=i.substr(0,i.length-2),s.setState({selectedMultiSelectLabel:i,selectedMultiSelectOptions:o,isCompletedMultiSelection:!0},function(){return t&&t()})}else void 0!==e.selectedValues&&null!=e.selectedValues&&0===e.selectedValues.length?s.resetState(function(){return t&&t()}):t&&t()},this.getSubmenuList=function(e,t,o){var n=null,i=null;if(t&&0<t.length){for(var l=t.length,r=0;r<l;r++)(i=t[r]).label===e&&(n=i.options.map(function(t,e,n){return Y.createElement("div",null,Y.createElement("div",{"data-key":e,key:e,className:s.props.optionClass,onClick:function(e){s.onSelect(t,e,o)}},t.label))}));return n}return[]},this.clearAllMultiSelect=function(e){s.setState({selectedMultiSelectOptions:{},selectedMultiSelectLabel:"",isCompletedMultiSelection:!0},function(){"function"==typeof e&&e()})},this.onClickClearAll=function(){s.setState({isCompletedMultiSelection:!s.props.shouldUseMultiselectApplyBtn,selectedMultiSelectOptions:{},selectedMultiSelectLabel:""}),s.emitOnselectIfMultiselect({}),"function"==typeof s.props.onClearAll&&s.props.onClearAll()},this.onMultiSelect=function(e,t){var n=s.state.selectedMultiSelectOptions||{},o=s.state.selectedMultiSelectLabel,i={};i=s.shouldDeselect(e)?s.handleDeselect(o,n,e.label):s.handleSelect(o,n,e),s.setState({selectedMultiSelectOptions:i.tempObj,selectedMultiSelectLabel:i.label,isCompletedMultiSelection:!s.props.shouldUseMultiselectApplyBtn}),s.emitOnselectIfMultiselect(i.tempObj,t)},this.handleDeselect=function(e,t,n){return delete t[n],{label:s.getLabelFromMultiselected(t),tempObj:t}},this.handleSelect=function(e,t,n){if(s.props.shouldAcceptOneFromGroup&&n.hasGroup)for(var o in t)t[o].groupName===n.groupName&&delete t[o];return t[n.label]=n,{label:s.getLabelFromMultiselected(t),tempObj:t}},this.getLabelFromMultiselected=function(e){var t="";for(var n in e)t+=n+", ";return t.substr(0,t.length-2)},this.shouldDeselect=function(e){return!ie(s.state.selectedMultiSelectOptions)&&-1<Object.keys(s.state.selectedMultiSelectOptions).indexOf(e.label)},this.hasInMultiSelected=function(e){return!ie(s.state.selectedMultiSelectOptions)&&-1<Object.keys(s.state.selectedMultiSelectOptions).indexOf(e.label)},this.onMultiSelectDone=function(e){s.setState({isCompletedMultiSelection:!0}),s.hideOption(),s.emitOnselectIfMultiselect(s.state.selectedMultiSelectOptions,e)},this.tempMultiselectedOptions={},this.tempMultiselectedLabel="",this.emitOnselectIfMultiselect=function(e,t){"function"==typeof s.props.onSelect&&s.props.onSelect(e,t)},this.listenClickoutsideEvent=function(){return document.addEventListener("click",s.handleClickoutside)},this.handleClickoutside=function(e){s.hasTitleClass(e.target)||s.isClickWithinDropdownWrapper(e.target)||(s.props.multiSelect&&(s.state.isCompletedMultiSelection||(ie(s.tempMultiselectedOptions)?s.clearAllMultiSelect():s.setState({isCompletedMultiSelection:!0,selectedMultiSelectOptions:s.tempMultiselectedOptions,selectedMultiSelectLabel:s.tempMultiselectedLabel}),s.props.shouldUseMultiselectApplyBtn&&s.emitOnselectIfMultiselect(s.tempMultiselectedOptions))),s.hideOption())},this.isClickWithinDropdownWrapper=function(e){var t=e;if(t){if(s.isHtmlTag(t))return!1;if(s.isDropdownOptionContainer(t&&t.classList))return!0;for(var n=0;n<15;n++){if(t=t&&t.parentElement,s.isHtmlTag(t))return!1;if(s.isDropdownWrapper(t&&t.classList))return!0}}return!1},this.isHtmlTag=function(e){return e&&"HTML"===e.tagName},this.hasTitleClass=function(e){return e&&e.matches("."+de)},this.toggleDropdown=function(e){return s.state.isOpen?s.hideOption():s.showOption(e)},this.isDropdownWrapper=function(e){return e&&void 0===e||null===e?0:0<=e.value.indexOf(re)},this.isDropdownOptionContainer=function(e){return void 0===e?0:-1<e.value.indexOf(ce)},this.showOption=function(e){s.state.isOpen||(s.onOpenOption(e),s.setState({isOpen:!0}))},this.hideOption=function(){s.state.isOpen&&(s.onCloseOption(),s.setState({isOpen:!1}))},this.isFirstTimeOpen=!0,this.WidthRequiredToshow=0,this.onOpenOption=function(e){s.props.autoWidthAdjust&&s.isFirstTimeOpen&&(s.isFirstTimeOpen=!1,s.WidthRequiredToshow=e&&e.offsetWidth),s.tempMultiselectedOptions=Object.assign({},s.state.selectedMultiSelectOptions),s.tempMultiselectedLabel=s.state.selectedMultiSelectLabel,"function"==typeof s.props.onOpenOption&&s.props.onOpenOption()},this.onCloseOption=function(){return"function"==typeof s.props.onCloseOption&&s.props.onCloseOption()},this.onSelect=function(e,t,n){e.isTitle||(s.props.multiSelect?s.onMultiSelect(e,t):(s.state.selectedOption!==e.label&&s.onChange(e,t,n),s.setState({selectedOption:e.label}),"function"==typeof s.props.onSelect&&s.props.onSelect(e,t,n),s.hideOption()))},this.onChange=function(e,t,n){return"function"==typeof s.props.onChange&&s.props.onChange(e,t,n)},this.onHeaderHover=function(e){"function"==typeof s.props.onHeaderHover&&s.props.onHeaderHover(s.state.selectedMultiSelectOptions,s.state.selectedOption)},this.onTagHover=function(){"function"==typeof s.props.onTagHover&&s.props.onTagHover(s.state.selectedMultiSelectOptions,s.state.selectedOption)},this.renderHeader=function(){return"function"==typeof s.props.fixedTitle?s.props.fixedTitle(s.props.multiSelect?s.state.selectedMultiSelectLabel:s.state.selectedOption):s.props.multiSelect?s.renderHeaderForMultiselect():oe(s.state.selectedOption)?s.props.defauleSelectTitle&&s.renderPlaceholder()||s.getHiddenComponent():s.state.selectedOption},this.renderPlaceholder=function(){return Y.createElement("span",{className:"rcd-placeholder"},s.props.defauleSelectTitle)},this.renderHeaderForMultiselect=function(){var e=Object.keys(s.state.selectedMultiSelectOptions);if(0<e.length){var t=[];return e.map(function(o){t.push(Y.createElement("span",{key:o,className:"rcd-multi-selected"},Y.createElement(ee,{height:s.props.cross.width,width:s.props.cross.height,fill:s.props.cross.color,onClick:function(){var e,t=s.state.selectedMultiSelectOptions||{},n=s.state.selectedMultiSelectLabel;e=s.handleDeselect(n,t,o),s.setState({selectedMultiSelectOptions:e.tempObj,selectedMultiSelectLabel:e.label,isCompletedMultiSelection:!0}),s.emitOnselectIfMultiselect(e.tempObj)}}),Y.createElement("span",{style:{paddingLeft:"3px"}},o)))}),Y.createElement("div",{style:{display:"inline-block"}},t)}return s.renderPlaceholder()},this.getHiddenComponent=function(){return Y.createElement("div",{style:{opacity:"0",width:"auto",fontWeight:"100"}},s.longestString)},this.resetState=function(e){s.setState({selectedOption:""},function(){s.clearAllMultiSelect(function(){e&&e()})})},this.checkLongestString=function(){var e=0<arguments.length&&void 0!==arguments[0]?arguments[0]:"";e.length>s.longestOptionStrLength&&(s.longestOptionStrLength=e.length,s.longestString=e)},this.onOptionHover=function(e,t){var n=s.getEachOptionWrapperNode(e.target);n&&(n.style.background=s.props.optionHoverColor),"function"==typeof s.props.onOptionHover&&s.props.onOptionHover(n,t)},this.onOptionOut=function(e){var t=s.getEachOptionWrapperNode(e.target);t&&t.style.removeProperty("background")},this.getEachOptionWrapperNode=function(e){if(s.isEachOptionWrapper(e&&e.classList))return e;var t=e;if(t)for(var n=0;n<5;n++)if(t=t&&t.parentElement,s.isEachOptionWrapper(t&&t.classList))return t;return 0},this.isEachOptionWrapper=function(e){return void 0===e?0:-1<e.value.indexOf(ue)},this.onOptionMouseEnter=function(e,t){},this.isMultiSelect=function(){return s.props.multiSelect},this.getOptionToRender=function(e,t,n,o,i,l){return Y.createElement(K,{key:o},Y.createElement(ve,f({},s.props,{classes:t,optionObj:e,isMixWithTitle:n,index:o,isSelectedOption:i,isMultiSelect:s.isMultiSelect(),tickRequiredForSingleSelect:s.props.tickRequiredForSingleSelect,shouldUseRadioBtn:s.props.shouldUseRadioBtn,onMouseOver:s.onOptionHover,onMouseOut:s.onOptionOut,onSelect:s.onSelect,defaultOptionClass:ae,autoWidthAdjust:s.props.autoWidthAdjust})),!e.isTitle&&o!==l-1&&"function"==typeof s.props.optionDivider&&s.props.optionDivider())},this.isSelectedOption=function(e){return s.isMultiSelect()?s.hasInMultiSelected(e):e.label===s.state.selectedOption},this.getDefaultGroupDivider=function(){return Y.createElement("div",{key:le.getNew(),className:"rcd-group-divider"})},this.makeListAsOption=function(e,n){var o="",t=null,i={},l=e.length,r=!1;return t=e.map(function(e,t){return s.checkLongestString(e.label),o="",r=s.isSelectedOption(e),e.isSubmenu?(o=pe+" "+s.props.optionClass,i[e.label]=s.getSubmenuList(e.label,e.subMenu,e)):o=e.isTitle?de:s.props.optionClass,e.isTitle&&0!==t&&t!==l-1?["function"==typeof s.props.groupDivider&&s.props.groupDivider()||s.getDefaultGroupDivider(),s.getOptionToRender(e,o,n,t,r,l)]:s.getOptionToRender(e,o,n,t,r,l)}),{mainMenuList:t=s.props.multiSelect?Y.createElement(fe,f({},s.props,{mainMenuList:t,onMultiSelectDone:s.onMultiSelectDone,onClickClearAll:s.onClickClearAll})):Y.createElement("div",null,"function"==typeof s.props.optionHeaderer&&s.props.optionHeaderer(),t),subMenuList:i}},this.renderArrow=function(){return Y.createElement("div",{className:"arrow-zone",style:{width:s.props.arrow.width,transform:s.state.isOpen?"rotate(180deg)":"rotate(0deg)"}},Y.createElement(Z,{fill:s.props.arrow.color,width:s.props.arrow.width,height:s.props.arrow.height}))}};return we.defaultProps={defauleSelectTitle:"Select...",option:[],onSelect:null,onChange:null,onHeaderHover:null,onOptionHover:null,onClearAll:null,wrapperClass:"",headerClass:"",optionContainerClass:"",optionClass:"",autoWidthAdjust:!0,shouldResetState:!1,multiSelect:!1,shouldUseMultiselectOptionHeader:!0,multiselectHeaderLabel:"Filter By Value",multiSelectHeaderClearAllLabel:"Clear All",shouldUseMultiselectApplyBtn:!1,multiselectApplyBtnClass:"",multiselectApplyBtnLabel:"Apply",shouldAcceptOneFromGroup:!1,groupDivider:null,headerOptionDivider:null,fixedTitle:null,onOpenOption:null,selectedValues:null,shouldUseRadioBtn:!1,isAlwaysOpen:!1,autoOpen:!1,shouldUseArrow:!0,selectedOptionColor:"#39BB9C",tickRequiredForSingleSelect:!1,tick:{width:12,height:12,color:"#50b7e8"},radio:{width:12,height:12,selectedFillColor:"#50b7e8",unSelectedFillColor:"#77878e"},cross:{width:13,height:13,color:"#50b7e8"},arrow:{color:"gray",width:12,height:12},optionHeaderer:null,removeOptionWhenSelected:!1,selectedOptionClass:"",disabled:!1,shouldOpenOptionsOnhover:!1,optionHoverColor:"#d8eff8",optionDivider:null},we.propTypes={defauleSelectTitle:X.string,option:X.array,onSelect:X.func,onChange:X.func,onHeaderHover:X.func,onOptionHover:X.func,onClearAll:X.func,wrapperClass:X.string,headerClass:X.string,optionContainerClass:X.string,optionClass:X.string,width:X.string,height:X.string,shouldResetState:X.bool,multiSelect:X.bool,shouldUseMultiselectOptionHeader:X.bool,multiselectApplyBtnClass:X.string,multiselectHeaderLabel:X.string,multiSelectHeaderClearAllLabel:X.string,shouldAcceptOneFromGroup:X.bool,groupDivider:X.func,headerOptionDivider:X.func,fixedTitle:X.func,dropDownRef:X.string,onOpenOption:X.func,tickRequiredForSingleSelect:X.bool,shouldUseRadioBtn:X.bool,isAlwaysOpen:X.bool,autoOpen:X.bool,shouldUseArrow:X.bool,selectedOptionColor:X.string,shouldUseMultiselectApplyBtn:X.bool,optionHeader:X.func,removeOptionWhenSelected:X.bool,selectedOptionClass:X.string,tick:X.object,disabled:X.bool,shouldOpenOptionsOnhover:X.bool,optionHoverColor:X.string,optionDivider:X.func},we});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
